name: Secure CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3. Cache pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies + security tools
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install pytest bandit semgrep pip-audit flake8

      # 5. Run unit tests (PYTHONPATH добавлен!)
      - name: Run unit tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/app
          pytest app/tests

      # 6. Static code analysis
      - name: Bandit (SAST)
        run: bandit -r app

      - name: Semgrep (SAST)
        run: semgrep --config=auto app || true

      - name: Dependency scan
        run: pip-audit || true

      - name: Lint
        run: flake8 app

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 1. Build Docker image
      - name: Build Docker image
        run: docker build -t secure-pipeline-demo .

      # 2. Scan Docker image
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "secure-pipeline-demo"
          format: "table"

      # 3. Log in to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Push Docker image
      - name: Push Docker image
        run: |
          docker tag secure-pipeline-demo ghcr.io/${{ github.repository }}/secure-pipeline-demo:latest
          docker push ghcr.io/${{ github.repository }}/secure-pipeline-demo:latest
